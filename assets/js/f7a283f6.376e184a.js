"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1435],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(f,l(l({ref:n},d),{},{components:t})):r.createElement(f,l({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7172:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},l="Deployment",s={unversionedId:"developers/Deployment",id:"developers/Deployment",title:"Deployment",description:"introduce systemd management configs\u3002",source:"@site/docs/developers/2. Deployment.md",sourceDirName:"developers",slug:"/developers/Deployment",permalink:"/docs/developers/Deployment",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developers/2. Deployment.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Compile and Run",permalink:"/docs/developers/Compile and Run"},next:{title:"On-chain interaction",permalink:"/docs/developers/Onchain"}},i={},c=[{value:"Hardware",id:"hardware",level:2},{value:"minimum",id:"minimum",level:3},{value:"recommended",id:"recommended",level:3},{value:"network&amp;port",id:"networkport",level:3},{value:"chain node",id:"chain-node",level:2},{value:"start bash",id:"start-bash",level:2},{value:"systemd config",id:"systemd-config",level:2}],d={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deployment"},"Deployment"),(0,a.kt)("p",null,"introduce systemd management configs\u3002"),(0,a.kt)("h2",{id:"hardware"},"Hardware"),(0,a.kt)("h3",{id:"minimum"},"minimum"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"8core\n16g\nssd iops>5k\n")),(0,a.kt)("h3",{id:"recommended"},"recommended"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"16core\n32g\nssd iops>5k\n")),(0,a.kt)("h3",{id:"networkport"},"network&port"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"External IP Address\nPort TCP/UDP 32668\n")),(0,a.kt)("h2",{id:"chain-node"},"chain node"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"config.toml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[Eth]\nSyncMode = "snap"\nTrieCleanCacheRejournal= 300000000000\n\n[Eth.Miner]\nGasFloor = 8000000\nGasCeil = 8000000\nGasPrice = 0\nRecommit = 3000000000\nNoverify = false\n\n[Eth.Ethash]\nCacheDir = "ethash"\nCachesInMem = 2\nCachesOnDisk = 3\nCachesLockMmap = false\nDatasetDir = "/data/sardis/data/.ethash"\nDatasetsInMem = 1\nDatasetsOnDisk = 2\nDatasetsLockMmap = false\nPowMode = 0\n\n[Eth.TxPool]\nLocals = []\nNoLocals = false\nJournal = "transactions.rlp"\nRejournal = 3600000000000\nPriceLimit = 1\nPriceBump = 10\nAccountSlots = 16\nGlobalSlots = 4096\nAccountQueue = 64\nGlobalQueue = 1024\nLifetime = 10800000000000\n\n[Node]\nDataDir = "/data/sardis/data"\nInsecureUnlockAllowed = true\nNoUSB = true\nIPCPath = "geth.ipc"\nHTTPHost = "0.0.0.0"\nHTTPPort = 8545\nHTTPCors = ["*"]\nHTTPVirtualHosts = ["*"]\nHTTPModules = [\'eth\', \'net\', \'web3\']\n\nWSHost = "0.0.0.0"\nWSPort = 8546\nWSModules = [\'eth\', \'net\', \'web3\']\n\nGraphQLVirtualHosts = ["localhost"]\n\n\n[Node.P2P]\nMaxPeers = 50\nNoDiscovery = false\n\nListenAddr = ":32668"\nEnableMsgEvents = false\n\n[Node.HTTPTimeouts]\nReadTimeout = 30000000000\nWriteTimeout = 30000000000\nIdleTimeout = 120000000000\n\n')),(0,a.kt)("p",null,"use snap sync in the config, if full needed, change this line"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'SyncMode = "snap"\n')),(0,a.kt)("p",null,"to"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'SyncMode = "full"\n')),(0,a.kt)("h2",{id:"start-bash"},"start bash"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To show full detail help info of all flags, type ",(0,a.kt)("inlineCode",{parentName:"p"},"geth help")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"geth -h"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"run.sh")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#!/usr/bin/env bash\n/data/sardis/geth-linux-amd64 \\\n--config /data/sardis/config.toml  \\\n--logpath /data/sardis/logs \\\n--verbosity 3  >> /data/sardis/logs/systemd_chain_console.out 2>&1\n")),(0,a.kt)("p",null,"if you need to use it as archive node, add\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--syncmode full \\\n--gcmode archive \\\n")),(0,a.kt)("p",null,"so\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#!/usr/bin/env bash\n/data/sardis/geth-linux-amd64 \\\n--config /data/sardis/config.toml  \\\n--logpath /data/sardis/logs \\\n--syncmode full \\\n--gcmode archive \\\n--verbosity 3  >> /data/sardis/logs/systemd_chain_console.out 2>&1\n")),(0,a.kt)("p",null,"If no any network flags were provided, the node will connect the sardis-mainnet by default. If you want to connect to sardis-testnet, add:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--testnet\n")),(0,a.kt)("h2",{id:"systemd-config"},"systemd config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Sardis Network service\n\n[Service]\nType=simple\nExecStart=/bin/sh /data/sardis/run.sh\n\nRestart=on-failure\nRestartSec=5s\n\nLimitNOFILE=65536\n\n[Install]\n\n")))}u.isMDXComponent=!0}}]);