"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3336],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},i="On-chain interaction",c={unversionedId:"developers/Onchain",id:"developers/Onchain",title:"On-chain interaction",description:"Sardis is compatible with Ethereum's ecosystem\uff0csupport all Ethereum's RPC API and DK\u3002",source:"@site/docs/developers/3. Onchain.md",sourceDirName:"developers",slug:"/developers/Onchain",permalink:"/docs/developers/Onchain",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developers/3. Onchain.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/docs/developers/Deployment"},next:{title:"Contract",permalink:"/docs/developers/Contract"}},s={},l=[{value:"RPC",id:"rpc",level:2},{value:"SDK",id:"sdk",level:2},{value:"Get chain info",id:"get-chain-info",level:3},{value:"Generate account",id:"generate-account",level:3},{value:"Build transaction",id:"build-transaction",level:3}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"on-chain-interaction"},"On-chain interaction"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sardis")," is compatible with ",(0,a.kt)("inlineCode",{parentName:"p"},"Ethereum"),"'s ecosystem\uff0csupport all ",(0,a.kt)("inlineCode",{parentName:"p"},"Ethereum"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"RPC")," API and DK\u3002"),(0,a.kt)("h2",{id:"rpc"},"RPC"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/api"},"RPC Method List")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' curl -s -H \'content-type:application/json\' -d \'{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}\' http://localhost:8545\n')),(0,a.kt)("h2",{id:"sdk"},"SDK"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"Ethereum")," SDK library such as ",(0,a.kt)("inlineCode",{parentName:"p"},"web3j"),",",(0,a.kt)("inlineCode",{parentName:"p"},"web3js"),", etc for development. "),(0,a.kt)("h3",{id:"get-chain-info"},"Get chain info"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const Web3 = require('web3')\n\nasync function getChainId() {\n    const web3 = new Web3('https://mainnet-rpc.sardisnetwork.com')\n    let chainId = await web3.eth.getChainId()\n    console.log(`chain id: ${chainId}`)\n    return chainId\n}\n")),(0,a.kt)("h3",{id:"generate-account"},"Generate account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const Web3Accounts = require('web3-eth-accounts')\n\nlet account = new Web3Accounts().create()\n//do not do this on prd env\nconsole.log(`account generated. address: ${account.address}, private key: ${account.privateKey}`)\n")),(0,a.kt)("h3",{id:"build-transaction"},"Build transaction"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const Web3 = require('web3')\n\nasync function transfer(fromAccount, to, value){\n    const web3 = new Web3('https://mainnet-rpc.sardisnetwork.com')\n    let chainId = await web3.eth.getChainId()\n    let nonce = await web3.eth.getTransactionCount(fromAccount.address)\n    let gasPrice = await web3.eth.getGasPrice()\n\n    let unsigned = {\n        from: fromAccount.address,\n        to,\n        value: web3.utils.numberToHex(web3.utils.toWei(value, 'ether')),\n        gasPrice,\n        nonce,\n        chainId,\n    }\n\n    unsigned.gas = await web3.eth.estimateGas(unsigned)\n\n    let signed = await fromAccount.signTransaction(unsigned)\n    return signed\n}\n")))}d.isMDXComponent=!0}}]);